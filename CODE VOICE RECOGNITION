clear,clc,close all
% Parameters
Fs = 8000;      
BtRt = 8;
T = 2;          
NumS = 4;       
SDf = 10;       

%% Recording user voice
USER = zeros(3*NumS,T*Fs); 
% Record your voice for a second.
recObj = audiorecorder(Fs,BtRt,1);
disp('Get Ready')
pause(3)
disp('Say the first word.')
recordblocking(recObj,T);
pause(1)
% Store data in double-precision array.
tmp = getaudiodata(recObj);
USER(1,:) = tmp';
for i=2:NumS
    disp('again')
    recordblocking(recObj,T);
    pause(1)
    tmp = getaudiodata(recObj);
    USER(i,:) = tmp';
end
n=i+1;
disp('Say the second word')
recordblocking(recObj,T);
pause(1)
tmp = getaudiodata(recObj);
USER(n,:) = tmp';
for i=n+1:2*NumS
    disp('again')
    recordblocking(recObj,T);
    pause(1)
    tmp = getaudiodata(recObj);
    USER(i,:) = tmp';
end
n=i+1;
disp('Say the third word')
recordblocking(recObj,T);
pause(1)
tmp = getaudiodata(recObj);
USER(n,:) = tmp';
for i=n+1:3*NumS
    disp('again')
    recordblocking(recObj,T);
    pause(1)
    tmp = getaudiodata(recObj);
    USER(i,:) = tmp';
end
disp('End of Recording.');


Features = zeros(3,1); 
t = 1/Fs:1/Fs:T;

ff = Fs*(0:1/length(t):(T/2)-1/length(t));             

n = 1;
for j=1:3
    tmp = 0;
    for i=n:j*NumS
        tmp = tmp + sum(abs(USER(i,:)));
    end
    n = i+1;
    Features(j) = tmp/NumS;
end
Features = round(Features);

%% Training the model 
trans = [1/3,1/3,1/3;1/3,1/3,1/3;1/3,1/3,1/3]; 
emis = []; %Emission matrix (normal distribution)
range = round(0.4*min(Features)):round(1.4*max(Features));
for i=1:3
pd = makedist('Normal','mu',Features(i),'sigma',SDf);
emis = [emis;pdf(pd,range)];
end

%% Saving trained model
save('Model','trans','emis','range');



%% CHECK
clear,clc,close all
% Parameters
Fs = 8000;      
T = 2;          
voice = zeros(3,T*Fs); 
% Record your voice for a second.
recObj = audiorecorder(Fs,8,1);
disp('Get Ready')
pause(3)
disp('Say the first word.')
recordblocking(recObj,T);
voice(1,:) = getaudiodata(recObj);
disp('Say the second word.')
recordblocking(recObj,T);
voice(2,:) = getaudiodata(recObj);
disp('Say the third word.')
recordblocking(recObj,T);
voice(3,:) = getaudiodata(recObj);
% Extract voice features
Features = zeros(3,1); 
t = 1/Fs:1/Fs:T;
ff = Fs*(0:1/length(t):(T/2)-1/length(t));
for i=1:3
    Features(i) = sum(abs(voice(i,:)));
end
% Load the model saved
load('Model.mat');

%plot sound signal
t = linspace(0,3*T,3*T*Fs);
voice = [voice(1,:),voice(2,:),voice(3,:)];
figure('Position',[68 88 1264 583]),subplot(1,2,1)
plot(t,voice),xlabel('Time (s)')
title('Voice signal')
%Plot matching result
subplot(1,2,2)
plot(range,emis(1,:),'b',range,emis(2,:),'r',range,emis(3,:),'g')
hold on
a=Features(1); b=Features(2); c=Features(3); d = max(max(emis));
plot([a,a],[0 d],'--b'), plot(a,d,'og')
plot([b,b],[0 d],'--r'), plot(b,d,'og')
plot([c,c],[0 d],'--g'), plot(c,d,'og')
hold off,axis off
title('Features matching')

Features = round(Features);
% for i=1:3, Features(i)=find(range==Features(i)); end
% Result
output = hmmviterbi(Features,trans,emis);
if output(1) == 1 && output(2) == 2 || output(3) == 3
    say('Access granted')
    disp('Access granted')
    disp('BUTTERWORTH BANDPASS FILTER: https://github.com/Efthimis015/EOKH/blob/main/Band-Pass-Filter')
    disp('HIGH PASS FILTER: https://github.com/Efthimis015/EOKH/blob/main/High-Pass-Filter')
    disp('LOW PASS FILTER: https://github.com/Efthimis015/EOKH/blob/main/Low-Pass-Filter')
    

    
else
    say('Access denied')
    disp('Access denied')
end
